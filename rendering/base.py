import moderngl as mgl

class Display:
	box: Box
	world: fmatN
	
	def display(self, scene):
		...
	def stack(self, scene) -> '[(key, target, priority, callable)]':
		...
	def __getitem__(self, key) -> 'Display':
		...
	def update(self, scene, displayable) -> bool:
		...
	def control(self, view, key, sub, event):
		...


class Group(Display):
	''' a group contains other displays and its subdisplays are moved with the group '''
	@setter
	def world(self, world):	...
	@setter
	def pose(self, world): ...
	
	def stack(self, scene) -> '[(key, target, priority, callable)]':
		...

	def __setitem__(self, key, displayable):	...
	def __getitem__(self, key):   ...
	def __delitem__(self, key):   ...

class Scene:
	overrides = {}
	stack = {}

	def __setitem__(self, key, displayable):	...
	def __getitem__(self, key):   ...
	def __delitem__(self, key):   ...
	
	def restack(self):   ...
	def render(self, view, **uniforms):  ...
	
	def display(self, displayable, former=None):   ...


class SubView(Display):
	''' a SubView is like a Group with its own rendering settings and display queue '''
	def __init__(self, scene, **options):
		...
	def stack(self, scene) -> '[(key, target, priority, callable)]':
		...
	def control(self, vew, key, sub, event):
		...


class Offscreen:
	''' an Offscreen view is like a View but renders on offscreen buffers. 
		The result can be retreived to an image or copied to an other rendering target 
	'''
	def __init__(self, scene, scene, projection=None, navigation=None, **options):
		...
	
	def render(self):    ...

